#!/usr/bin/env bash
# Test the interactions if a DELETE request is made at different stages of a GET
# request

# location of the python executable in the venv
PYTHON=/home/vagrant/JDMA/venv/bin/python3.6
MANAGE="$PYTHON $PWD/../manage.py"

case "$1" in

############################ TEST 1 ############################
1)
# Delete during GET_START

# PUT a migration first and transition it to ON_STORAGE
batch_id=`$PWD/test_put_request | jq '.batch_id'`
echo $batch_id
$PWD/test_put_migration

#schedule the GET request
$PWD/test_get_request $batch_id

# schedule the DELETE request
$PWD/test_delete_request $batch_id

# run the delete transitions
$PWD/test_delete_migration
;;

############################ TEST 2 ############################
2)
# Delete during GET_PENDING

# PUT a migration first and transition it to ON_STORAGE
batch_id=`$PWD/test_put_request | jq '.batch_id'`
echo $batch_id
$PWD/test_put_migration

#schedule the GET request
$PWD/test_get_request $batch_id

# transition to the first stage (GET_PENDING)
$MANAGE runscript jdma_lock

# schedule the DELETE request
$PWD/test_delete_request $batch_id

# run the delete transitions
$PWD/test_delete_migration
;;

############################ TEST 3 ############################
3)
# Delete during GET_PENDING

# PUT a migration first and transition it to ON_STORAGE
batch_id=`$PWD/test_put_request | jq '.batch_id'`
echo $batch_id
$PWD/test_put_migration

#schedule the GET request
$PWD/test_get_request $batch_id

# transition to the second stage (GETTING)
$MANAGE runscript jdma_lock
$MANAGE runscript jdma_transfer

# schedule the DELETE request
$PWD/test_delete_request $batch_id

# run the delete transitions
$PWD/test_delete_migration
;;

############################ TEST 4 ############################
4)
# Delete during GET_PENDING

# PUT a migration first and transition it to ON_STORAGE
batch_id=`$PWD/test_put_request | jq '.batch_id'`
echo $batch_id
$PWD/test_put_migration

#schedule the GET request
$PWD/test_get_request $batch_id

# transition to the third stage (GETTING)
$MANAGE runscript jdma_lock
$MANAGE runscript jdma_transfer
$MANAGE runscript jdma_transfer

# schedule the DELETE request
$PWD/test_delete_request $batch_id

# run the delete transitions
$PWD/test_delete_migration
;;


############################ TEST 5 ############################
5)
# Delete during GET_PENDING

# PUT a migration first and transition it to ON_STORAGE
batch_id=`$PWD/test_put_request | jq '.batch_id'`
echo $batch_id
$PWD/test_put_migration

#schedule the GET request
$PWD/test_get_request $batch_id

# transition to the fifth stage (GET_UNPACK)
$MANAGE runscript jdma_lock
$MANAGE runscript jdma_transfer
$MANAGE runscript jdma_transfer
$MANAGE runscript jdma_monitor

# schedule the DELETE request
$PWD/test_delete_request $batch_id

# run the delete transitions
$PWD/test_delete_migration
;;

############################ TEST 6 ############################
6)
# Delete during GET_PENDING

# PUT a migration first and transition it to ON_STORAGE
batch_id=`$PWD/test_put_request | jq '.batch_id'`
echo $batch_id
$PWD/test_put_migration

#schedule the GET request
$PWD/test_get_request $batch_id

# transition to the sixth stage (GET_RESTORE)
$MANAGE runscript jdma_lock
$MANAGE runscript jdma_transfer
$MANAGE runscript jdma_transfer
$MANAGE runscript jdma_monitor
$MANAGE runscript jdma_pack

# schedule the DELETE request
$PWD/test_delete_request $batch_id

# run the delete transitions
$PWD/test_delete_migration
;;

############################ TEST 7 ############################
7)
# Delete during GET_PENDING

# PUT a migration first and transition it to ON_STORAGE
batch_id=`$PWD/test_put_request | jq '.batch_id'`
echo $batch_id
$PWD/test_put_migration

#schedule the GET request
$PWD/test_get_request $batch_id

# transition to the seventh stage (GET_TIDY)
$MANAGE runscript jdma_lock
$MANAGE runscript jdma_transfer
$MANAGE runscript jdma_transfer
$MANAGE runscript jdma_monitor
$MANAGE runscript jdma_transfer

# schedule the DELETE request
$PWD/test_delete_request $batch_id

# run the delete transitions
$PWD/test_delete_migration
;;

############################ TEST 8 ############################
8)
# Delete during GET_PENDING

# PUT a migration first and transition it to ON_STORAGE
batch_id=`$PWD/test_put_request | jq '.batch_id'`
echo $batch_id
$PWD/test_put_migration

#schedule the GET request
$PWD/test_get_request $batch_id

# transition to the eigth stage (GET_COMPLETED)
$MANAGE runscript jdma_lock
$MANAGE runscript jdma_transfer
$MANAGE runscript jdma_transfer
$MANAGE runscript jdma_monitor
$MANAGE runscript jdma_transfer
$MANAGE runscript jdma_tidy

# schedule the DELETE request
$PWD/test_delete_request $batch_id

# run the delete transitions
$PWD/test_delete_migration
;;

############################ TEST 9 ############################
9)
# Delete during GET_PENDING

# PUT a migration first and transition it to ON_STORAGE
batch_id=`$PWD/test_put_request | jq '.batch_id'`
echo $batch_id
$PWD/test_put_migration

#schedule the GET request
$PWD/test_get_request $batch_id

# transition to the ninth stage (deleted)
$MANAGE runscript jdma_lock
$MANAGE runscript jdma_transfer
$MANAGE runscript jdma_transfer
$MANAGE runscript jdma_monitor
$MANAGE runscript jdma_transfer
$MANAGE runscript jdma_tidy
$MANAGE runscript jdma_tidy

# schedule the DELETE request
$PWD/test_delete_request $batch_id

# run the delete transitions
$PWD/test_delete_migration
;;

esac

# echo "10. jdma_lock GET_START->GET_PENDING"
# $PWD/manage.py runscript jdma_lock
#
# echo "11. jdma_transfer GET_PENDING->GETTING"
# $PWD/manage.py runscript jdma_transfer
#
# echo "12. jdma_transfer GETTING->GETTING"
# $PWD/manage.py runscript jdma_transfer
#
# echo "12a.jdma_monitor GETTING->GET_UNPACK"
# $PWD/manage.py runscript jdma_monitor
#
# echo "13. jdma_packing GET_UNPACK->GET_RESTORE"
# $PWD/manage.py runscript jdma_pack
#
# echo "14. jdma_transfer GET_RESTORE->GET_TIDY"
# $PWD/manage.py runscript jdma_transfer
#
# echo "15. jdma_tidy GET_TIDY->GET_COMPLETED"
# $PWD/manage.py runscript jdma_tidy
#
# echo "16. jdma_tidy GET_COMPLETED->deleted"
# $PWD/manage.py runscript jdma_tidy
