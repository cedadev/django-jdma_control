In development / test mode:

First become root: `sudo su`
Then activate the virtual env by invoking: `source /home/vagrant/JDMA/venv/bin/activate`

Then navigate to the JDMA source directory: `cd /Coding/django-jdma_control`

Then run the scripts using ./manage.py runscript <script name>

In the test mode run the scripts in this order:

(To put data)
                    Migration.stage
1. jdma_lock        ON_DISK->PUT_PENDING
2. jdma_transfer    PUT_PENDING->PUTTING
3. jdma_monitor     PUTTING->VERIFY_PENDING
4. jdma_transfer    VERIFY_PENDING->VERIFY_GETTING
5. jdma_monitor     VERIFY_GETTING->VERIFYING
6. jdma_verify      VERIFYING->ON_STORAGE
7. jdma_tidy        remove files, intermediary directories (verify) and the
                    original_path, delete MigrationRequest

(To get data)
                    MigrationRequest.stage
1. jdma_lock        ON_STORAGE->GET_PENDING
2. jdma_transfer    GET_PENDING->GETTING
3. jdma_monitor     GETTING->ON_DISK
4. jdma_tidy        set permissions and owner back on downloaded directory,
                    delete MigrationRequest

In the deployment mode the scripts will be run by cron
